"""Autogenerated ORM models from Pydantic schemas.

DO NOT EDIT MANUALLY. Regenerate via `python generate_orm_models.py`.
"""

from __future__ import annotations

import datetime
import uuid

from typing import Any, Literal, Optional, Union  # noqa

from fhir.resources.fhirtypes import (
    CodeableConceptType,  # noqa
    ReferenceType,  # noqa
)
from public import public
from sqlalchemy import (
    JSON,
    DateTime,
    Integer,
    String,
)
from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column


@public
class Base(DeclarativeBase):
    """Declarative base for  SDX."""

    pass


@public
@public
class Annotation(Base):
    """Annotation autogenerated."""

    __tablename__ = 'annotation'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    authorReference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    authorString: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    authorString__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    time: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    time__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class ClinicalImpression(Base):
    """ClinicalImpression autogenerated."""

    __tablename__ = 'clinicalimpression'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    changePattern: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    date: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    date__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    description: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    description__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectivePeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    encounter: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    finding: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    note: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    performer: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    previous: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    problem: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    prognosisCodeableConcept: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    prognosisReference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    protocol: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    protocol__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    statusReason: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subject: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    summary: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    summary__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    supportingInfo: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Condition(Base):
    """Condition autogenerated."""

    __tablename__ = 'condition'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementAge: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementPeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementRange: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementString: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    abatementString__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    bodySite: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    category: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    clinicalStatus: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    code: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    encounter: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    evidence: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    note: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetAge: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetPeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetRange: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetString: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    onsetString__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    participant: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    recordedDate: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    recordedDate__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    severity: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    stage: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subject: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    verificationStatus: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Encounter(Base):
    """Encounter autogenerated."""

    __tablename__ = 'encounter'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    account: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    actualPeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    admission: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    appointment: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    basedOn: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    careTeam: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    class_fhir: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    diagnosis: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    dietPreference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    episodeOfCare: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    length: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    location: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    partOf: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    participant: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    plannedEndDate: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    plannedEndDate__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    plannedStartDate: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    plannedStartDate__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    priority: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    reason: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    serviceProvider: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    serviceType: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    specialArrangement: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    specialCourtesy: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subject: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subjectStatus: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    type: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    virtualService: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    canonicalEpisodeId: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Observation(Base):
    """Observation autogenerated."""

    __tablename__ = 'observation'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    basedOn: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    bodySite: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    bodyStructure: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    category: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    code: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    component: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    dataAbsentReason: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    derivedFrom: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    device: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveInstant: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveInstant__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectivePeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    effectiveTiming: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    encounter: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    focus: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    hasMember: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesCanonical: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesCanonical__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesReference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    interpretation: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    issued: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    issued__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    method: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    note: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    partOf: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    performer: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    referenceRange: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    specimen: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subject: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    triggeredBy: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueAttachment: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueBoolean: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueBoolean__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueCodeableConcept: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueInteger: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueInteger__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valuePeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueQuantity: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueRange: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueRatio: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueReference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueSampledData: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueString: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueString__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    valueTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Patient(Base):
    """Patient autogenerated."""

    __tablename__ = 'patient'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    active: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    active__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    address: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    birthDate: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    birthDate__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    communication: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contact: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    deceasedBoolean: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    deceasedBoolean__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    deceasedDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    deceasedDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    gender: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    gender__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    generalPractitioner: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    link: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    managingOrganization: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    maritalStatus: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    multipleBirthBoolean: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    multipleBirthBoolean__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    multipleBirthInteger: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    multipleBirthInteger__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    name: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    photo: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    telecom: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Procedure(Base):
    """Procedure autogenerated."""

    __tablename__ = 'procedure'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    fhir_comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    implicitRules__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    language__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    meta: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    contained: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    extension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    modifierExtension: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    text: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    basedOn: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    bodySite: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    category: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    code: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    complication: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    encounter: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    focalDevice: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    focus: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    followUp: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    identifier: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesCanonical: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesCanonical__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesUri: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    instantiatesUri__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    location: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    note: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceAge: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceDateTime: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceDateTime__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrencePeriod: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceRange: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceString: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceString__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    occurrenceTiming: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    outcome: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    partOf: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    performer: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    reason: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    recorded: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    recorded__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    recorder: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    report: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    reportedBoolean: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    reportedBoolean__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    reportedReference: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    status__ext: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    statusReason: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    subject: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    supportingInfo: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    used: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class AIOutput(Base):
    """AIOutput autogenerated."""

    __tablename__ = 'aioutput'

    language: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    id: Mapped[str] = mapped_column(String, primary_key=True)
    encounter_id: Mapped[str] = mapped_column(String, index=True, default=...)
    type: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    content: Mapped[str] = mapped_column(String, index=True, default=...)
    model_version: Mapped[str] = mapped_column(String, index=True, default=...)
    timestamp: Mapped[datetime] = mapped_column(
        DateTime, index=True, default=...
    )


@public
@public
class DeIdentifiedDatasetDescriptor(Base):
    """DeIdentifiedDatasetDescriptor autogenerated."""

    __tablename__ = 'deidentifieddatasetdescriptor'

    id: Mapped[str] = mapped_column(
        String(36), primary_key=True, default=lambda: str(uuid.uuid4())
    )
    language: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    dataset_id: Mapped[str] = mapped_column(String, index=True, default=...)
    generation_date: Mapped[datetime] = mapped_column(
        DateTime, index=True, default=...
    )
    version: Mapped[str] = mapped_column(String, index=True, default=...)
    records: Mapped[int] = mapped_column(Integer, index=True, default=...)
    license: Mapped[str] = mapped_column(String, index=True, default=...)
    url: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )


@public
@public
class Evaluation(Base):
    """Evaluation autogenerated."""

    __tablename__ = 'evaluation'

    language: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    id: Mapped[str] = mapped_column(String, primary_key=True)
    aioutput_id: Mapped[str] = mapped_column(String, index=True, default=...)
    output_type: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    ratings: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    safety: Mapped[Any] = mapped_column(JSON, index=True, default=...)
    comments: Mapped[Any] = mapped_column(
        JSON, nullable=True, index=True, default=None
    )
    timestamp: Mapped[datetime] = mapped_column(
        DateTime, index=True, default=...
    )
