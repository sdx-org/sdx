"""Autogenerated SQLModel tables from Pydantic schemas.

DO NOT EDIT MANUALLY:
    regenerate via `python scripts/gen_models/gen_sqlmodel.py`.
"""

from __future__ import annotations

import uuid

from typing import Any, Optional, Union

from public import public
from sqlalchemy import (
    JSON,
    Boolean,
    Date,
    DateTime,
    Float,
    Integer,
    String,
)
from sqlmodel import Field, SQLModel


@public
class Annotation(SQLModel, table=True):
    __tablename__: str = 'annotation'

    language: Union[str, None] = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    authorReference: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    authorString: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    authorString__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    time: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    time__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class ClinicalImpression(SQLModel, table=True):
    __tablename__: str = 'clinicalimpression'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    changePattern: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    date: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    date__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    description: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    description__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectivePeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    encounter: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    finding: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    note: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    performer: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    previous: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    problem: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    prognosisCodeableConcept: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    prognosisReference: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    protocol: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    protocol__ext: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    statusReason: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subject: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    summary: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    summary__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    supportingInfo: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Condition(SQLModel, table=True):
    __tablename__: str = 'condition'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementAge: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementPeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementRange: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementString: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    abatementString__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    bodySite: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    category: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    clinicalStatus: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    code: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    encounter: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    evidence: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    note: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetAge: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetPeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetRange: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetString: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    onsetString__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    participant: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    recordedDate: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    recordedDate__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    severity: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    stage: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subject: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    verificationStatus: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Encounter(SQLModel, table=True):
    __tablename__: str = 'encounter'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    account: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    actualPeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    admission: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    appointment: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    basedOn: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    careTeam: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    class_fhir: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    diagnosis: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    dietPreference: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    episodeOfCare: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    length: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    location: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    partOf: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    participant: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    plannedEndDate: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    plannedEndDate__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    plannedStartDate: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    plannedStartDate__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    priority: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    reason: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    serviceProvider: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    serviceType: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    specialArrangement: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    specialCourtesy: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subject: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subjectStatus: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    type: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    virtualService: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    canonicalEpisodeId: Union[str, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Observation(SQLModel, table=True):
    __tablename__: str = 'observation'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    basedOn: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    bodySite: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    bodyStructure: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    category: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    code: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    component: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    dataAbsentReason: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    derivedFrom: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    device: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveInstant: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveInstant__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectivePeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    effectiveTiming: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    encounter: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    focus: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    hasMember: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesCanonical: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesCanonical__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesReference: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    interpretation: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    issued: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    issued__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    method: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    note: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    partOf: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    performer: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    referenceRange: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    specimen: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subject: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    triggeredBy: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueAttachment: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueBoolean: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueBoolean__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueCodeableConcept: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueInteger: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueInteger__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valuePeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueQuantity: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueRange: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueRatio: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueReference: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueSampledData: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueString: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueString__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    valueTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Patient(SQLModel, table=True):
    __tablename__: str = 'patient'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    active: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    active__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    address: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    birthDate: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    birthDate__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    communication: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contact: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    deceasedBoolean: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    deceasedBoolean__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    deceasedDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    deceasedDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    gender: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    gender__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    generalPractitioner: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    link: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    managingOrganization: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    maritalStatus: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    multipleBirthBoolean: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    multipleBirthBoolean__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    multipleBirthInteger: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    multipleBirthInteger__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    name: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    photo: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    telecom: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Procedure(SQLModel, table=True):
    __tablename__: str = 'procedure'

    language: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    fhir_comments: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    id: Union[Annotated, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    implicitRules__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    language__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    meta: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    contained: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    extension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    modifierExtension: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    text: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    basedOn: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    bodySite: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    category: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    code: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    complication: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    encounter: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    focalDevice: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    focus: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    followUp: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    identifier: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesCanonical: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesCanonical__ext: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesUri: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    instantiatesUri__ext: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    location: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    note: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceAge: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceDateTime: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceDateTime__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrencePeriod: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceRange: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceString: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceString__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    occurrenceTiming: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    outcome: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    partOf: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    performer: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    reason: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    recorded: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    recorded__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    recorder: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    report: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    reportedBoolean: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    reportedBoolean__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    reportedReference: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status: Union[Annotated, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    status__ext: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    statusReason: Any = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    subject: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    supportingInfo: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    used: Union[List, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class AIOutput(SQLModel, table=True):
    __tablename__: str = 'aioutput'

    language: Union[str, None] = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    id: Any = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=False,
        index=False,
        sa_type=String,
    )
    encounter_id: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    type: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    content: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    model_version: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    timestamp: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=DateTime
    )


@public
class DeIdentifiedDatasetDescriptor(SQLModel, table=True):
    __tablename__: str = 'deidentifieddatasetdescriptor'

    id: str | None = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        sa_type=String(36),
    )
    language: Union[str, None] = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    dataset_id: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    generation_date: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=DateTime
    )
    version: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    records: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=Integer
    )
    license: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    url: Union[str, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )


@public
class Evaluation(SQLModel, table=True):
    __tablename__: str = 'evaluation'

    language: Union[str, None] = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    id: Any = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=False,
        index=False,
        sa_type=String,
    )
    aioutput_id: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=String
    )
    output_type: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    ratings: Any[Literal, int] = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    safety: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=JSON
    )
    comments: Union[str, None] = Field(
        None, primary_key=False, nullable=True, index=True, sa_type=JSON
    )
    timestamp: Any = Field(
        ..., primary_key=False, nullable=False, index=True, sa_type=DateTime
    )
