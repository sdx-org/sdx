"""Autogenerated SQLModel tables from Pydantic schemas.

DO NOT EDIT MANUALLY:
    regenerate via `python scripts/gen_models/gen_sqlmodel.py`.
"""

from __future__ import annotations

import uuid

from typing import ClassVar, Union

from public import public
from sqlalchemy import (
    JSON,
    DateTime,
    Integer,
    String,
)
from sqlmodel import Field, SQLModel


@public
class Annotation(SQLModel, table=True):
    """Annotation autogenerated."""

    __tablename__: ClassVar[str] = 'annotation'

    language: Union[str, None] = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    authorReference: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    authorString: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    authorString__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    time: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    time__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class ClinicalImpression(SQLModel, table=True):
    """ClinicalImpression autogenerated."""

    __tablename__: ClassVar[str] = 'clinicalimpression'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    changePattern: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    date: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    date__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    description: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    description__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectivePeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    encounter: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    finding: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    note: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    performer: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    previous: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    problem: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    prognosisCodeableConcept: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    prognosisReference: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    protocol: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    protocol__ext: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    statusReason: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subject: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    summary: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    summary__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    supportingInfo: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Condition(SQLModel, table=True):
    """Condition autogenerated."""

    __tablename__: ClassVar[str] = 'condition'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementAge: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementPeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementRange: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementString: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    abatementString__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    bodySite: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    category: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    clinicalStatus: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    code: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    encounter: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    evidence: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    note: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetAge: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetPeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetRange: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetString: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    onsetString__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    participant: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    recordedDate: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    recordedDate__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    severity: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    stage: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subject: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    verificationStatus: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Encounter(SQLModel, table=True):
    """Encounter autogenerated."""

    __tablename__: ClassVar[str] = 'encounter'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    account: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    actualPeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    admission: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    appointment: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    basedOn: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    careTeam: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    class_fhir: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    diagnosis: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    dietPreference: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    episodeOfCare: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    length: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    location: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    partOf: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    participant: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    plannedEndDate: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    plannedEndDate__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    plannedStartDate: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    plannedStartDate__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    priority: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    reason: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    serviceProvider: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    serviceType: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    specialArrangement: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    specialCourtesy: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subject: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subjectStatus: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    type: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    virtualService: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    canonicalEpisodeId: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Observation(SQLModel, table=True):
    """Observation autogenerated."""

    __tablename__: ClassVar[str] = 'observation'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    basedOn: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    bodySite: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    bodyStructure: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    category: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    code: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    component: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    dataAbsentReason: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    derivedFrom: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    device: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveInstant: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveInstant__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectivePeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    effectiveTiming: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    encounter: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    focus: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    hasMember: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesCanonical: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesCanonical__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesReference: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    interpretation: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    issued: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    issued__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    method: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    note: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    partOf: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    performer: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    referenceRange: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    specimen: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subject: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    triggeredBy: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueAttachment: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueBoolean: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueBoolean__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueCodeableConcept: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueInteger: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueInteger__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valuePeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueQuantity: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueRange: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueRatio: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueReference: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueSampledData: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueString: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueString__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    valueTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Patient(SQLModel, table=True):
    """Patient autogenerated."""

    __tablename__: ClassVar[str] = 'patient'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    active: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    active__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    address: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    birthDate: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    birthDate__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    communication: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contact: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    deceasedBoolean: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    deceasedBoolean__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    deceasedDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    deceasedDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    gender: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    gender__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    generalPractitioner: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    link: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    managingOrganization: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    maritalStatus: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    multipleBirthBoolean: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    multipleBirthBoolean__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    multipleBirthInteger: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    multipleBirthInteger__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    name: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    photo: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    telecom: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Procedure(SQLModel, table=True):
    """Procedure autogenerated."""

    __tablename__: ClassVar[str] = 'procedure'

    language: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    fhir_comments: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    id: Union[str, None] = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=True,
        index=False,
        sa_type=JSON,
    )
    implicitRules: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    implicitRules__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    language__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    meta: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    contained: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    extension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    modifierExtension: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    text: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    basedOn: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    bodySite: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    category: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    code: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    complication: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    encounter: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    focalDevice: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    focus: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    followUp: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    identifier: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesCanonical: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesCanonical__ext: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesUri: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    instantiatesUri__ext: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    location: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    note: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceAge: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceDateTime: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceDateTime__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrencePeriod: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceRange: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceString: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceString__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    occurrenceTiming: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    outcome: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    partOf: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    performer: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    reason: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    recorded: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    recorded__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    recorder: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    report: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    reportedBoolean: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    reportedBoolean__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    reportedReference: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    status__ext: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    statusReason: str = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    subject: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    supportingInfo: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    used: Union[list[str], None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class AIOutput(SQLModel, table=True):
    """AIOutput autogenerated."""

    __tablename__: ClassVar[str] = 'aioutput'

    language: Union[str, None] = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    id: str = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=False,
        index=False,
        sa_type=String,
    )
    encounter_id: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    type: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    content: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    model_version: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    timestamp: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=DateTime,
    )


@public
class DeIdentifiedDatasetDescriptor(SQLModel, table=True):
    """DeIdentifiedDatasetDescriptor autogenerated."""

    __tablename__: ClassVar[str] = 'deidentifieddatasetdescriptor'

    id: str | None = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        sa_type=String,
    )
    language: Union[str, None] = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    dataset_id: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    generation_date: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=DateTime,
    )
    version: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    records: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=Integer,
    )
    license: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    url: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )


@public
class Evaluation(SQLModel, table=True):
    """Evaluation autogenerated."""

    __tablename__: ClassVar[str] = 'evaluation'

    language: Union[str, None] = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    id: str = Field(
        default_factory=lambda: str(uuid.uuid4()),
        primary_key=True,
        nullable=False,
        index=False,
        sa_type=String,
    )
    aioutput_id: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=String,
    )
    output_type: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    ratings: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    safety: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=JSON,
    )
    comments: Union[str, None] = Field(
        default=None,
        primary_key=False,
        nullable=True,
        index=True,
        sa_type=JSON,
    )
    timestamp: str = Field(
        default=...,
        primary_key=False,
        nullable=False,
        index=True,
        sa_type=DateTime,
    )
